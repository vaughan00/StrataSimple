-- Database Schema generated by sql_schema_export.py
-- Generated at: 2025-05-15 01:00:33

-- Disable foreign key constraints during import
SET session_replication_role = 'replica';

-- Drop tables if they exist (for rebuilding)
DROP TABLE IF EXISTS payment CASCADE;
DROP TABLE IF EXISTS user CASCADE;
DROP TABLE IF EXISTS fee CASCADE;
DROP TABLE IF EXISTS contact_property CASCADE;
DROP TABLE IF EXISTS strata_settings CASCADE;
DROP TABLE IF EXISTS property CASCADE;
DROP TABLE IF EXISTS expense CASCADE;
DROP TABLE IF EXISTS contact CASCADE;
DROP TABLE IF EXISTS billing_period CASCADE;
DROP TABLE IF EXISTS activity_log CASCADE;

-- Create tables
CREATE TABLE activity_log (
	id SERIAL NOT NULL, 
	timestamp TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	event_type VARCHAR(50) NOT NULL, 
	description VARCHAR(250) NOT NULL, 
	related_object_type VARCHAR(50), 
	related_object_id INTEGER, 
	CONSTRAINT activity_log_pkey PRIMARY KEY (id)
);

CREATE TABLE billing_period (
	id SERIAL NOT NULL, 
	name VARCHAR(50) NOT NULL, 
	start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	end_date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	total_amount DOUBLE PRECISION NOT NULL, 
	description VARCHAR(200), 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT billing_period_pkey PRIMARY KEY (id)
);

CREATE TABLE contact (
	id SERIAL NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	email VARCHAR(120), 
	phone VARCHAR(20), 
	is_owner BOOLEAN, 
	notes TEXT, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	emergency_contact BOOLEAN DEFAULT false, 
	CONSTRAINT contact_pkey PRIMARY KEY (id)
);

CREATE TABLE expense (
	id SERIAL NOT NULL, 
	amount DOUBLE PRECISION NOT NULL, 
	name VARCHAR(100) NOT NULL, 
	description VARCHAR(200), 
	due_date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	paid BOOLEAN, 
	paid_date TIMESTAMP WITHOUT TIME ZONE, 
	invoice_filename VARCHAR(255), 
	matched_transaction_id VARCHAR(100), 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT expense_pkey PRIMARY KEY (id)
);

CREATE TABLE property (
	id SERIAL NOT NULL, 
	unit_number VARCHAR(10) NOT NULL, 
	description VARCHAR(200), 
	balance DOUBLE PRECISION, 
	entitlement DOUBLE PRECISION, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT property_pkey PRIMARY KEY (id)
);

CREATE TABLE strata_settings (
	id SERIAL NOT NULL, 
	strata_name VARCHAR(200) NOT NULL, 
	address VARCHAR(255) NOT NULL, 
	admin_email VARCHAR(120) NOT NULL, 
	bank_account_name VARCHAR(100), 
	bank_bsb VARCHAR(10), 
	bank_account_number VARCHAR(20), 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT strata_settings_pkey PRIMARY KEY (id)
);

CREATE TABLE contact_property (
	contact_id INTEGER NOT NULL, 
	property_id INTEGER NOT NULL, 
	relationship_type VARCHAR(50) NOT NULL, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT contact_property_pkey PRIMARY KEY (contact_id, property_id), 
	CONSTRAINT contact_property_contact_id_fkey FOREIGN KEY(contact_id) REFERENCES contact (id), 
	CONSTRAINT contact_property_property_id_fkey FOREIGN KEY(property_id) REFERENCES property (id)
);

CREATE TABLE fee (
	id SERIAL NOT NULL, 
	property_id INTEGER NOT NULL, 
	amount DOUBLE PRECISION NOT NULL, 
	date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	description VARCHAR(200), 
	period VARCHAR(50), 
	paid BOOLEAN, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	fee_type VARCHAR(50) DEFAULT 'billing_period'::character varying, 
	due_date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	paid_amount DOUBLE PRECISION DEFAULT 0.0, 
	CONSTRAINT fee_pkey PRIMARY KEY (id), 
	CONSTRAINT fee_property_id_fkey FOREIGN KEY(property_id) REFERENCES property (id)
);

CREATE TABLE "user" (
	id SERIAL NOT NULL, 
	email VARCHAR(120) NOT NULL, 
	role VARCHAR(20), 
	token VARCHAR(100), 
	token_expiry TIMESTAMP WITHOUT TIME ZONE, 
	property_id INTEGER, 
	last_login TIMESTAMP WITHOUT TIME ZONE, 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT user_pkey PRIMARY KEY (id), 
	CONSTRAINT user_property_id_fkey FOREIGN KEY(property_id) REFERENCES property (id), 
	CONSTRAINT user_email_key UNIQUE (email)
);

CREATE TABLE payment (
	id SERIAL NOT NULL, 
	property_id INTEGER, 
	fee_id INTEGER, 
	amount DOUBLE PRECISION NOT NULL, 
	date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	description VARCHAR(200), 
	reference VARCHAR(100), 
	reconciled BOOLEAN, 
	is_duplicate BOOLEAN, 
	confirmed BOOLEAN, 
	transaction_id VARCHAR(100), 
	created_at TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT payment_pkey PRIMARY KEY (id), 
	CONSTRAINT payment_fee_id_fkey FOREIGN KEY(fee_id) REFERENCES fee (id), 
	CONSTRAINT payment_property_id_fkey FOREIGN KEY(property_id) REFERENCES property (id)
);

-- Re-enable foreign key constraints
SET session_replication_role = 'origin';
